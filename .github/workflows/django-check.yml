name: Django CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.11"]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.PGUSER }}
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD }}
          POSTGRES_DB: ${{ secrets.PGDATABASE }}
        ports:
          - ${{ PGPORT }}:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
          make setup

    - name: Run the linter
      run: |
        make lint

    - name: Run the tests
      run: |
        make test

    - name: Test & publish code coverage
      uses: paambaati/codeclimate-action@v3.2.0
      if: github.ref_name == 'main'
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: make coverage
        debug: true
